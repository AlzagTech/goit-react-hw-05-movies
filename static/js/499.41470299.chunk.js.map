{"version":3,"file":"static/js/499.41470299.chunk.js","mappings":"iQAEaA,E,OAAaC,GAAAA,GAAH,oL,SCwCvB,EAnCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAyCE,EAAAA,EAAAA,UAAS,IAAlD,eAAOC,EAAP,KAAqBC,EAArB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,6GAEDC,EAAAA,GAAsBP,GAFrB,OAEdQ,EAFc,OAGpBJ,EAAiBI,EAAKC,SAHF,gDAKpBC,QAAQC,IAAR,MALoB,yDAAH,qDASrBL,GACD,GAAE,CAACN,KAGF,0BACE,wBAC2B,IAAxBG,EAAaS,QACZ,qEAEAT,EAAaU,KAAI,SAAAC,GAAI,OACnB,UAAChB,EAAD,YACE,oCAAYgB,EAAKC,WACjB,6BAAKD,EAAKE,aAFKF,EAAKG,GADH,OAU9B,C,+LCtCKC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,mCAAsCD,IAD5B,cAC3BG,EAD2B,yBAG1BA,EAASb,KAAKC,SAHY,2CAAH,qDAQnBa,EAAiB,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCACmCK,EADnC,gCADQ,cACzBF,EADyB,yBAKxBA,EAASb,MALe,2CAAH,sDAQjBgB,EAAiB,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,EAAAA,IAAA,gBACZM,EADY,oBACQP,EADR,oBADQ,cACzBG,EADyB,yBAKxBA,EAASb,MALe,2CAAH,sDAQjBkB,EAAiB,mCAAG,WAAMD,GAAN,uFACRN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACgBP,EADhB,oBADQ,cACzBG,EADyB,yBAKxBA,EAASb,MALe,2CAAH,sDAQjBmB,EAAiB,mCAAG,WAAMF,GAAN,uFACRN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACgBP,EADhB,oBADQ,cACzBG,EADyB,yBAKxBA,EAASb,MALe,2CAAH,qD","sources":["pages/Reviews/Reviews.styled.jsx","pages/Reviews/Reviews.jsx","services/movies-api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewItem = styled.li`\n  padding: 20px;\n\n  background-color: #efc8c8;\n\n  border-radius: 4px;\n\n  & + & {\n    margin-top: 20px;\n  }\n\n  p + p {\n    margin-top: 8px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport * as API from '../../services/movies-api';\n\nimport { ReviewItem } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMoviesReviews] = useState([]);\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      try {\n        const data = await API.fetchMovieReviews(movieId);\n        setMoviesReviews(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {movieReviews.length === 0 ? (\n          <p>We don't have any reviews for this movie.</p>\n        ) : (\n          movieReviews.map(item => (\n            <ReviewItem key={item.id}>\n              <p>Author: {item.author}</p>\n              <p> {item.content}</p>\n            </ReviewItem>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'd892969fd580e8f0dbedefcab33e9ce9';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n\n  return response.data.results;\n};\n\n// api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&query=asd&page=1&include_adult=false\n\nexport const fetchSearchMovies = async searchQuery => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  );\n\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movie_id => {\n  const response = await axios.get(\n    `movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movie_id => {\n  const response = await axios.get(\n    `movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movie_id => {\n  const response = await axios.get(\n    `movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n"],"names":["ReviewItem","styled","movieId","useParams","useState","movieReviews","setMoviesReviews","useEffect","getMovieReviews","API","data","results","console","log","length","map","item","author","content","id","API_KEY","axios","fetchTrendingMovies","response","fetchSearchMovies","searchQuery","fetchMovieDetails","movie_id","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}