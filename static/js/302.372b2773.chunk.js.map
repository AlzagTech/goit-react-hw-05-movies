{"version":3,"file":"static/js/302.372b2773.chunk.js","mappings":"6QAGaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wNAaTE,EAAkBF,EAAAA,GAAAA,IAAH,2SCdfG,EAAaH,EAAAA,GAAAA,IAAH,0N,SCiBvB,EAhBgB,WACd,OACE,UAACG,EAAD,YACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,4BAKT,E,SCiED,EA1EqB,WAAO,IAAD,IACnBC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KACnDC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAyCE,EAAAA,EAAAA,UAAS,CAAC,GAAnD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQC,EACNJ,EADMI,MAAOC,EACbL,EADaK,KAAMC,EACnBN,EADmBM,YAAaC,EAChCP,EADgCO,aAAcC,EAC9CR,EAD8CQ,SAAUC,EACxDT,EADwDS,OAGpDC,EAAcJ,EAAW,0CACQA,GACnC,wDAEEK,EAAYC,KAAKC,KAAoB,GAAfN,IAAsB,EAE9CO,EAAc,GAmBlB,OAjBIL,IACFK,EAAcL,EAAOM,KAAI,SAAAC,GAAK,OAAIA,EAAMX,IAAV,IAAgBY,KAAK,MAAQ,KAG7DC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,6GAEDC,EAAAA,GAAsBvB,GAFrB,OAEdwB,EAFc,OAGpBpB,EAAiBoB,GAHG,gDAKpBlB,GAAS,GALW,yDAAH,qDASrBgB,GACD,GAAE,CAACtB,KAGF,4BACE,SAACZ,EAAD,CAAWK,GAAIG,EAAoB6B,QAAnC,4BAECpB,GACC,0DAEA,iCACE,UAACd,EAAD,YACE,gBAAKmC,IAAKb,EAAac,IAAI,MAC3B,4BACE,wBAAKpB,GAASC,KACd,2CAAmBM,EAAnB,OACCH,IACC,iCACE,sCACA,uBAAIA,OAGPM,IACC,iCACE,oCACA,uBAAIA,cAKZ,SAAC,EAAD,KACA,0BACE,SAAC,EAAAW,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,aAOb,C,+LC9EKC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,mCAAsCD,IAD5B,cAC3BG,EAD2B,yBAG1BA,EAAST,KAAKU,SAHY,2CAAH,qDAQnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRL,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCACmCM,EADnC,gCADQ,cACzBH,EADyB,yBAKxBA,EAAST,MALe,2CAAH,sDAQjBa,EAAiB,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,EAAAA,IAAA,gBACZO,EADY,oBACQR,EADR,oBADQ,cACzBG,EADyB,yBAKxBA,EAAST,MALe,2CAAH,sDAQjBe,EAAiB,mCAAG,WAAMD,GAAN,uFACRP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACgBR,EADhB,oBADQ,cACzBG,EADyB,yBAKxBA,EAAST,MALe,2CAAH,sDAQjBgB,EAAiB,mCAAG,WAAMF,GAAN,uFACRP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACgBR,EADhB,oBADQ,cACzBG,EADyB,yBAKxBA,EAAST,MALe,2CAAH,qD","sources":["pages/MovieDetails/MovieDetalis.styled.jsx","components/AddInfo/AddInfo.styled.jsx","components/AddInfo/AddInfo.jsx","pages/MovieDetails/MovieDetalis.jsx","services/movies-api.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const GoBackBtn = styled(NavLink)`\n  display: inline-block;\n  text-align: center;\n  padding: 8px 16px;\n\n  text-decoration: none;\n  border-radius: 4px;\n\n  background-color: grey;\n  color: white;\n  margin-bottom: 16px;\n`;\n\nexport const MovieDetailsBox = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n\n  img {\n    width: 200px;\n  }\n\n  h2 {\n    margin-bottom: 8px;\n  }\n\n  h3 {\n    margin-bottom: 8px;\n  }\n\n  span {\n    display: block;\n    margin-bottom: 24px;\n  }\n\n  p {\n    margin-bottom: 16px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const AddInfoBox = styled.div`\n  margin-bottom: 20px;\n  padding: 16px;\n\n  border-top: 1px solid grey;\n  border-bottom: 1px solid grey;\n\n  p {\n    font-weight: bold;\n    margin-bottom: 8px;\n    font-size: 18px;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { AddInfoBox } from './AddInfo.styled';\n\nconst AddInfo = () => {\n  return (\n    <AddInfoBox>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n    </AddInfoBox>\n  );\n};\n\nexport default AddInfo;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { GoBackBtn, MovieDetailsBox } from './MovieDetalis.styled';\nimport AddInfo from 'components/AddInfo/AddInfo';\n\nimport * as API from '../../services/movies-api';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n  const [movieDetails, setMoviesDetails] = useState({});\n  const [error, setError] = useState(false);\n\n  const { title, name, poster_path, vote_average, overview, genres } =\n    movieDetails;\n\n  const moviePoster = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : 'https://i.postimg.cc/KYV47028/no-poster-available.jpg';\n\n  const userScore = Math.ceil(vote_average * 10) || 0;\n\n  let movieGenres = '';\n\n  if (genres) {\n    movieGenres = genres.map(genre => genre.name).join(' ') || '';\n  }\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      try {\n        const data = await API.fetchMovieDetails(movieId);\n        setMoviesDetails(data);\n      } catch (error) {\n        setError(true);\n      }\n    };\n\n    getMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <GoBackBtn to={backLinkLocationRef.current}>‚Üê Go back</GoBackBtn>\n\n      {error ? (\n        <p>Opps... something went wrong!</p>\n      ) : (\n        <>\n          <MovieDetailsBox>\n            <img src={moviePoster} alt=\"\" />\n            <div>\n              <h2>{title || name}</h2>\n              <span>User Score: {userScore}%</span>\n              {overview && (\n                <>\n                  <h3>Overview</h3>\n                  <p>{overview}</p>\n                </>\n              )}\n              {movieGenres && (\n                <>\n                  <h3>Genres</h3>\n                  <p>{movieGenres}</p>\n                </>\n              )}\n            </div>\n          </MovieDetailsBox>\n          <AddInfo />\n          <div>\n            <Suspense fallback={<div>Loading...</div>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'd892969fd580e8f0dbedefcab33e9ce9';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n\n  return response.data.results;\n};\n\n// api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&query=asd&page=1&include_adult=false\n\nexport const fetchSearchMovies = async searchQuery => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  );\n\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movie_id => {\n  const response = await axios.get(\n    `movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movie_id => {\n  const response = await axios.get(\n    `movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movie_id => {\n  const response = await axios.get(\n    `movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n"],"names":["GoBackBtn","styled","NavLink","MovieDetailsBox","AddInfoBox","to","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useState","movieDetails","setMoviesDetails","error","setError","title","name","poster_path","vote_average","overview","genres","moviePoster","userScore","Math","ceil","movieGenres","map","genre","join","useEffect","getMovieDetails","API","data","current","src","alt","Suspense","fallback","API_KEY","axios","fetchTrendingMovies","response","results","fetchSearchMovies","searchQuery","fetchMovieDetails","movie_id","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}